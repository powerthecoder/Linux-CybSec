Building the Victim Ubuntu Server
------------------------------
1. Drag and drop the Ubuntu Server ISO onto the VirtualBox
2. Select 4 Gigs of RAM, 2 CPU's, 25 Gigs of Storage and apply settings
3. Start the VM
4. Select English with ENTER
5. Up arrow to "Update to the new installer", and ENTER
6. ENTER on Keyboard configurations
7. ENTER on "Choose Type of Install" so that "Ubuntu Server" is selected (that is the default)
8. ENTER on Network Configurations for DHCP
9. ENTER on Configure Proxy
10. ENTER on "Configure Ubuntu Archive Mirror"
11. On "Guided Storage Configuration" hit TAB until 'Done' is selected
12. On "Storage Configuration" hit ENTER on Done to Accept Config
13. On Pop up "Confirm Destructive Action", TAB to Continue. Hit ENTER.
14. For "Profile Setup" put whatever you like that is easy to remember. This server will reside in the NAT network only and will not be exposed to the network. It is going to be intentionally vulnerable! Pick an OK password for now that you can remember (TAB and ENTER to navigate).
	Example:
		Name: 		James Smith
		Server Name:	labBox
		Username:	james
		Password:	juice$hop31$
15. Enter on the Ubuntu Pro option page
16. SPACEBAR to select "Install OpenSSH server"; it will have an X now. TAB to "Done" and Enter
17. On featured Snaps TAB to "Done"
18. Wait for Install. When "Install Complete!" is at the top, and Reboot is an option, TAB to 'Reboot Now' and push ENTER
19. Observer Failure! Thats ok. We need to EJECT the "CD"
20. Menu Options: Machine -> Settings -> Storage. Ensure the CD is 'Empty'. Select OK. ENTER on boot screen.
21. Observe the bootup and wait for splash screen. It might look frozen... Hit Enter.
22. Login with creds you saved.
23. Note the IP Address! Example:	IPv4 address for enp0s3: 192.168.88.4

--SWITCH TO SSH TERMINAL IN YOUR KALI BOX!!!---
To install docker we are now going to follow the instructions from the offical docker install instructions!
But here are what they were as of December 7th, 2023

1. Open a terminal with terminator (the red box on the top bard) or the regular terminal next to it.
2. sudo nano /etc/hosts
3. add: 10.0.2.15	www.juiceshop.com
4. ^ use TAB between IP and Hostname
Should look like something like this:

127.0.0.1       localhost
127.0.1.1       kali
::1             localhost ip6-localhost ip6-loopback
ff02::1         ip6-allnodes
ff02::2         ip6-allrouters
192.168.88.4	www.juiceshop.com

5. CTRL+O then ENTER to save the file. If there is an error - did you use sudo in the command to edit as root?
6. CTRL+X to exit

What is the order of DNS?! If I forget, raise your hand and ask. :-)

7. Ping Test!
┌──(kali㉿kali)-[~/Desktop/OWASP Class]
└─$ ping www.juiceshop.com 					TAB TO AUTO COMPLETE
PING www.juiceshop.com (192.168.88.4) 56(84) bytes of data.
64 bytes from www.juiceshop.com (192.168.88.4): icmp_seq=1 ttl=64 time=0.028 ms
64 bytes from www.juiceshop.com (192.168.88.4): icmp_seq=2 ttl=64 time=0.050 ms
64 bytes from www.juiceshop.com (192.168.88.4): icmp_seq=3 ttl=64 time=0.051 ms

What can we learn from this ping about our target OS? Does the TTL tell us anything?
Don't forget about [TAB] completion for our commands.

8.ssh owasp@www.juiceshop.com
9. Type Yes to add key
10. Enter Password
--Update your server!---
11. sudo apt update && sudo apt upgrade -y && sudo apt dist-upgrade -y && sudo apt full-upgrade -y && sudo apt clean && sudo apt autoremove -y && sudo reboot now
11a. TAB to OK, hit enter as necessary during upgrades.
11b. The server will now reboot
12. Enter password for the UBUNTU SERVER (you should be SSH'd into the system and are now operating there)
13. Open a web browser and go to: https://docs.docker.com/engine/install/ubuntu/
14. Basically we are going to cut and paste the commands into the Ubuntu server; NOT THE KALI SYSTEM
15. SSH back into Ubuntu. It might take a minute to reboot and for the SSH Server to start again.
16. ENSURE YOU SEE A PROMPT LIKE THIS!!!!!: 	owasp@labbox:~$      (Note that is NOT kali@kali)
17. Follow instructions on site. You should cut and paste directly from there. But here are the commands:

for pkg in docker.io docker-doc docker-compose docker-compose-v2 podman-docker containerd runc; do sudo apt-get remove $pkg; done

# Add Docker's official GPG key:
sudo apt-get update
sudo apt-get install ca-certificates curl gnupg
sudo install -m 0755 -d /etc/apt/keyrings
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
sudo chmod a+r /etc/apt/keyrings/docker.gpg

# Add the repository to Apt sources:
echo \
  "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
  $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | \
  sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
sudo apt-get update

sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin

sudo docker run hello-world

18. Add yourself to the docker group to ease the pain (not recommended in production!!):
sudo groupadd docker
sudo usermod -aG docker $USER
19. You will need to log out of the Ubuntu Server and back in with the command 'exit'
20. Log back in.
21. Test with simply running 'docker images' and/or 'id'. With 'id' look for the Docker group in your profile. Now you are ready!!

====================
DOCKER TIME! WOOT!
===================

Quick Docker Knowledge:
+ Docker Images are basically config files that instruct the docker engine on how to build a container
+ Docker containers are NOT virtual machines - but they are similar. Containers can have an operating system different from the Host OS - but share the kernel and its resources. Thus you can't have a Windows container on a linux host.
+ Containers are generally microservices, or software suites that are self CONTAINed and portable
+ Containers allow the same exact setup to exist across diverse systems

Docker commands you will need:

docker 				- see help menu
docker images -a		- list all images available
docker image ls
docker containers 		- see containers on system
docker containers -h		- additional help for containers subcommand
docker container ls -a		- See all containers that are stepped
docker container rm 7c2e5...	- remove container by CONTAINER ID
docker image rm 9c7a54a9a43c	- Remove docker image by IMAGE ID
docker search juice-shop	- search docker hub for public docker images (google ahead of time. Read docs)


Installing Juice Shop:
Browse to: https://github.com/juice-shop/juice-shop

22. Pull the official Juice Shop image: 
docker pull bkimminich/juice-shop

Note: you don't have to pull it first. If you go to run it and its not on disk it will automatically pull it.

23. Script it out:
nano juiceIt.sh
------
Add the following to the script file:
------
#!/bin/bash
docker container run -d -e NODE_ENV=unsafe --restart=on-failure --name juiceshop -p 80:3000 bkimminich/juice-shop

CTRL+O, CTRL+X


24. Make it executable:
chmod +x juiceIt.sh

25. Run it
./juiceIt.sh

26. Check status of it:
docker containers
ss -plant |grep 3000
netstat -plant |grep 3000		(Missing something? Install it!)

Browse to http://www.juiceshop.com

==================================
*****Troubleshooting Tips*********
==================================
1. The docker container doesn't take well to the VM being suspended. Stop the container. Start it again.
2. Check the port with 'nc -vvzw1 www.juiceshop.com 80' or 'nmap -p 80 www.juiceshop.com'
3. Delete the container altogether and relaunch it.
4. reboot the ubuntu server

sudo reboot now
docker container stop juiceshop
docker container rm juiceshop
./juiceIt.sh

Network Issues? Try cycling DHCP:
sudo dhclient -v

CONTAINERS ARE MEANT TO COME AND GO!!! Your progress is saved as a cookie in the browser you use. It won't hurt to delete, stop, start the container etc.


HAPPY HACKING!!!!
